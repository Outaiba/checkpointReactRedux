{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  todolist: [{\n    id: Math.random(),\n    title: \"todo item 1\",\n    description: \"description todo item 1\",\n    isDone: false\n  }, {\n    id: Math.random(),\n    title: \"todo item 2\",\n    description: \"description todo item 2\",\n    isDone: false\n  }, {\n    id: Math.random(),\n    title: \"todo item 3\",\n    description: \"description todo item 3\",\n    isDone: true\n  }]\n};\nexport const todoSlice = createSlice({\n  name: \"todo\",\n  initialState,\n  reducers: {\n    addTask: (state, action) => {\n      state.todolist.push(action.payload);\n    },\n    removeTask: (state, action) => {\n      state.todolist = state.todolist.filter(el => el.id !== action.payload.id);\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addTask\n} = todoSlice.actions;\nexport const {\n  removeTask\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","todolist","id","Math","random","title","description","isDone","todoSlice","name","reducers","addTask","state","action","push","payload","removeTask","filter","el","actions","reducer"],"sources":["/Users/outaibagherairi/Desktop/react-project/reduxApp/mon-app/src/redux/todoSlice/TodoSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  todolist: [\n    {\n      id: Math.random(),\n      title: \"todo item 1\",\n      description: \"description todo item 1\",\n      isDone: false,\n    },\n    {\n      id: Math.random(),\n      title: \"todo item 2\",\n      description: \"description todo item 2\",\n      isDone: false,\n    },\n    {\n      id: Math.random(),\n      title: \"todo item 3\",\n      description: \"description todo item 3\",\n      isDone: true,\n    },\n  ],\n};\n\nexport const todoSlice = createSlice({\n  name: \"todo\",\n  initialState,\n  reducers: {\n    addTask: (state, action) => {\n      state.todolist.push(action.payload);\n    },\n    removeTask: (state, action) => {\n      state.todolist = state.todolist.filter(\n        (el) => el.id !== action.payload.id\n      );\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addTask } = todoSlice.actions;\nexport const { removeTask } = todoSlice.actions;\n\nexport default todoSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,CACR;IACEC,EAAE,EAAEC,IAAI,CAACC,MAAL,EADN;IAEEC,KAAK,EAAE,aAFT;IAGEC,WAAW,EAAE,yBAHf;IAIEC,MAAM,EAAE;EAJV,CADQ,EAOR;IACEL,EAAE,EAAEC,IAAI,CAACC,MAAL,EADN;IAEEC,KAAK,EAAE,aAFT;IAGEC,WAAW,EAAE,yBAHf;IAIEC,MAAM,EAAE;EAJV,CAPQ,EAaR;IACEL,EAAE,EAAEC,IAAI,CAACC,MAAL,EADN;IAEEC,KAAK,EAAE,aAFT;IAGEC,WAAW,EAAE,yBAHf;IAIEC,MAAM,EAAE;EAJV,CAbQ;AADS,CAArB;AAuBA,OAAO,MAAMC,SAAS,GAAGT,WAAW,CAAC;EACnCU,IAAI,EAAE,MAD6B;EAEnCT,YAFmC;EAGnCU,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1BD,KAAK,CAACX,QAAN,CAAea,IAAf,CAAoBD,MAAM,CAACE,OAA3B;IACD,CAHO;IAIRC,UAAU,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MAC7BD,KAAK,CAACX,QAAN,GAAiBW,KAAK,CAACX,QAAN,CAAegB,MAAf,CACdC,EAAD,IAAQA,EAAE,CAAChB,EAAH,KAAUW,MAAM,CAACE,OAAP,CAAeb,EADlB,CAAjB;IAGD;EARO;AAHyB,CAAD,CAA7B,C,CAeP;;AACA,OAAO,MAAM;EAAES;AAAF,IAAcH,SAAS,CAACW,OAA9B;AACP,OAAO,MAAM;EAAEH;AAAF,IAAiBR,SAAS,CAACW,OAAjC;AAEP,eAAeX,SAAS,CAACY,OAAzB"},"metadata":{},"sourceType":"module"}